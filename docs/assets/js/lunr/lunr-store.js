var store = [{
        "title": "Tapyrus Core v0.4.0リリース",
        "excerpt":"Tapyrus Core v0.4.0, Tapyrus Signer v0.4.0では以下の新しい機能が利用できるようになりました。   主な変更点   フェデレーション管理機能   Tapyrusでは、ブロックの生成を予め定められた複数の署名者（フェデレーション）の多重署名によって行います。 Signerはチェーンのセットアップ時に予め決定され、各Signerの公開鍵を集約した集約公開鍵がジェネシスブロックのブロックヘッダーに記載されています。 以降各ブロックの有効性の検証をする際に、ジェネシスブロックのブロックヘッダーの集約公開鍵に対して有効なSchnorr署名が提供されているか検証しています。   v0.4.0では、ジェネシスブロックで決められた署名者の追加・変更・削除を行うフェデーレーションの管理機能が追加されました。 これにより、ブロックを作成する署名者を途中で変更することが可能になります。署名者の変更は以下の手順で行われます。      フェデレーションの新しい署名者全員で集約公開鍵を再作成します。   現在のフェデレーションのメンバーで作成する新しいブロックのブロックヘッダー内に1で作成した新しい集約公開鍵をセットした上でブロックの署名を作成し、作成したブロックをブロードキャストします。   2で作成したブロックがブロックチェーンに追加されると、その次のブロックからブロックの有効性を検証するために使用される集約公開鍵が、2でセットされた新しい集約公開鍵に切り替わります。つまり新しいブロックは新しいフェデレーションにより作成されます。   具体的なSignerの更新手順については、こちらのドキュメントを参照ください。   独自ネットワークの構成   Tapyrusは利用する各業界毎に異なるTapyrusネットワークを構成し、使用するブロックチェーンです。 これまでは、独自ネットワークを構成する際には、Tapyrusのソースコードを変更しビルドする必要がありましたが、 v0.4.0から設定ファイルで独自ネットワークを構成する機能が追加されました。 これにより、ソースコードの変更なしに設定ファイルのみで独自ネットワークの構成が可能になります。   独自ネットワークを構成する手順については、こちらのドキュメントを参照ください。   その他、詳しい内容についてはリリースノートを、ノードの起動方法については、Getting Startedを参照してください。   Testnetの更新   v0.4.0のリリースに伴い、Chaintopeが提供するTestnetもリセットされているのでご注意ください。 Chaintopeが運用するTestnetについては、Testnetのジェネシスブロックのファイルを作成し、 Testnet用のseederに接続する設定をtapyrus.confに記載し、それらを指定してtapyrusdを起動することで接続できます。 具体的な手順はこちらを参照してください。Testnet用のFaucetからコインを入手することで、簡単にテスト利用を始めることができます。   ","categories": ["core"],
        "tags": [],
        "url": "/ja/2020/05/25/release-core-0.4.0/",
        "teaser": null
      },{
        "title": "Tapyrus Core v0.5.0リリース",
        "excerpt":"Tapyrus Core v0.5.0では、ブロックチェーンのレイヤー１でネイティブに動作するColored Coin（トークン）機能を追加しました。   主な変更点   ネイティブColored Coin機能   トークンを取引する機能はこれまで、Bitcoinでも既存のトランザクションにオーバーレイする形のトークンプロトコルが複数展開されており、 特にEthereumではERC20の登場以来、多数のトークンコントラクトがデプロイされています。 これら多くがレイヤー2プロトコル/コントラクト層での実装であるのに対し、 TapyrusのColored Coinはレイヤー１のコンセンサスルールでトークンの価値移転をサポートします。   レイヤー１でトークンが評価されることから、トークンの正しさを検証するのにブロックチェーン全体のデータをダウンロードして、 関連トランザクションをすべて検証するといったことは必要はなく、UTXO単体でトークンの識別が可能になります。 これは軽量デバイスにとっては重要な特性になります。また、レイヤー2プロトコルでは、 トークンの識別のために使用済みデータをプルーニングできないといった制限がありましたが、 レイヤー１で評価できるようにすることで、不要になったデータのプルーニングが可能となり、 ノード運用コストを低減させることが可能になります。   Tapyrus Core v0.5.0では、新しいOP_COLOR opcodeを導入し、以下のタイプのトークンの発行、転送、焼却をサポートします。      再発行可能なトークン   再発行不可能なトークン   NFT（Non-Fungible Token）   仕様の詳細については、Tapyrusの技術概要のP.14にてご確認頂けます。   ","categories": ["core"],
        "tags": [],
        "url": "/ja/2021/12/24/release-core-0.5.0/",
        "teaser": null
      },{
        "title": "Tapyrus Core v0.5.1リリース",
        "excerpt":"ARM64アーキテクチャのコンテナで動作するTapyrus Core v0.5.1をリリースしました。   主な変更点   ARM64アーキテクチャのコンテナのサポート   バージョンv0.5.1では、TapyrusはARM64アーキテクチャベースのコンテナで動作するようになりました。   Docker HubにARM64アーキテクチャで動作可能なv0.5.1のイメージを追加しています。   secp256k1のサブモジュール化   Tapyrusが使用するsecp256k1ライブラリのリポジトリを分離し、Git submoduleとして参照するようになりました。   RPCの戻り値の名称変更   以下のRPCでトランザクションのfeaturesフィールドの名称がversionのままになっていたものを、正しくfeaturesに修正しています。      getrawtransaction   decoderawtransaction   ","categories": ["core"],
        "tags": [],
        "url": "/ja/2022/04/20/release-core-0.5.1/",
        "teaser": null
      },{
        "title": "Tapyrus Core v0.6.1リリース",
        "excerpt":"Tapyrus Core v0.6.1をリリースしました。   主な変更点   ブロックサイズの動的な変更をサポート   このリリースでは、ブロックサイズを動的に変更する機能が導入されました。 これまではブロックサイズの上限は1MBに固定されていました。 ブロックサイズの変更は、ブロックヘッダー内のxfied（xfieldType = 0x02）を使用して行われます。 チェーンを運用するフェデレーションが、xfiedで新しいブロックサイズを指定すると、 そのサイズがそれ以降作成されるブロックの最大サイズになります。 ブロックサイズの変更をトリガーできるのは、ブロックを生成するフェデレーションのみです。      注意： この機能を利用してブロックサイズを変更する場合、ネットワーク内のすべてのノードがv0.6.1以降を使用する必要があります。 旧バージョンを使用するノードは、認識している最大ブロックサイズを超えるブロックを受け取るとそれを無効なブロックとして判断します。 フェデレーションが後続のブロックを作成しても、ブロックサイズの変更を検知できない旧ノードは、後続のチェーンを認識できなくなります。   RPC   ノードのUTXOセットをダンプするdumptxoutsetRPCが追加されました。 将来、loadtxoset RPCが導入されると、スナップショットベースの同期が可能になる予定です。   USDTのトレースポイントを導入   開発、デバッグ、レビューおよび実稼働環境において、より詳細なモニタリングを可能にするために USDT（User Statically-Defined Tracing）のトレースポイントを導入しました （#280、 #281）。 これらのトレースポイントを使用することで内部のデータにアクセスできるようになります。 現在、提供されているトレースポイントについては、こちらで確認できます。   ビルド      依存ライブラリの更新：            leveldbを1.23にアップグレード（#272）       boostを1.81にアップグレード（#250）       不要になった依存ライブラリを削除（#249）           その他の変更      スレッドの同期とmutexの安定性の向上（#276）   tapyrus-genesisコマンドで非圧縮公開鍵が指定された場合にエラーを返すようになりました（#262）   ブロック高の型を32 bitに統一（#286）   CIの環境をUbuntu 22.04にアップグレードし、機能テストのRIPEMD160の実装を移植（#301）   セキュリティFix   Tapyrus CoreはBitcoin Coreのコードベースを元にしていますが、昨年開示された以下のBitcoin Coreの脆弱性の内、 Tapyrusにも関連する以下の脆弱性の対応を行っています。      巨大なGETDATAメッセージを使用したDoSへの対応（#312）   巨大なINVメッセージを使用したメモリDoSへの対応（#313）   オーファンの処理による重大なDoSへの対応（#314）   タイムスタンプの調整によるネットワーク分割への対応（#315）   addrメッセージスパムによるリモートクラッシュへの対応（#317）   変異ブロックによるブロック伝播阻害への対応（#318）   inv-to-sendの肥大化によるDoSへの対応（#319）   CVE-2024-35202への対応（#318）   ピアの停止によるブロック伝播の妨害への対応（#318）   バグ修正      -reloadxfieldオプションを使用して再起動した場合にクラッシュする不具合の修正（#275）   gettransaction RPCで手数料が正しく計算されない不具合の修正（#328）   すべての変更点については、リリースノートを参照ください。   ","categories": ["core"],
        "tags": [],
        "url": "/ja/2025/01/28/release-core-0.6.1/",
        "teaser": null
      }]
